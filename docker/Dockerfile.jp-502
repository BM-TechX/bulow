FROM nvcr.io/nvidia/deepstream-l4t:6.1.1-triton
ENV DEBIAN_FRONTEND=noninteractive

# from yolov5 repo guide
RUN apt-get update && \
    apt-get install -y git build-essential
RUN bash /opt/nvidia/deepstream/deepstream/user_additional_install.sh

RUN apt update && \
    apt install -y libfreetype6-dev

# To get video driver libraries at runtime (libnvidia-encode.so/libnvcuvid.so)
ENV NVIDIA_DRIVER_CAPABILITIES $NVIDIA_DRIVER_CAPABILITIES,video
ENV LOGLEVEL="INFO"
ENV GST_DEBUG=2
ENV GST_DEBUG_FILE=/app/output/GST_DEBUG.log

# GStreamer Dependencies
RUN apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev \
    gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl \
    gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

# RTSP
RUN apt-get install -y libgstrtspserver-1.0-0 gstreamer1.0-rtsp libgirepository1.0-dev gobject-introspection gir1.2-gst-rtsp-server-1.0

# Compile Python bindings
RUN apt update -y
RUN apt install python3-gi python3-dev python3-gst-1.0 python-gi-dev git python-dev python3-numpy python3-opencv \
    python3 python3-pip python3.8-dev cmake g++ build-essential libglib2.0-dev \
    libglib2.0-dev-bin libgstreamer1.0-dev libtool m4 autoconf automake libgirepository1.0-dev libcairo2-dev -y
RUN pip3 install --upgrade pip
RUN cd /opt/nvidia/deepstream/deepstream-6.1/sources/ \
    && git clone https://github.com/NVIDIA-AI-IOT/deepstream_python_apps.git \
    && cd deepstream_python_apps \
    && git submodule update --init \
    && apt-get install -y apt-transport-https ca-certificates -y \
    && update-ca-certificates \
    && cd 3rdparty/gst-python/ \
    && ./autogen.sh \
    && make \
    && make install \
    && cd ../../bindings \
    && mkdir build \
    && cd build \
    && curl -O -L https://github.com/NVIDIA-AI-IOT/deepstream_python_apps/releases/download/v1.1.4/pyds-1.1.4-py3-none-linux_aarch64.whl \
    && pip install ./pyds-1.1.4-py3-none-linux_aarch64.whl
    # && cmake .. -DPYTHON_MAJOR_VERSION=3 -DPYTHON_MINOR_VERSION=8 -DPIP_PLATFORM=linux_aarch64 -DDS_PATH=/opt/nvidia/deepstream/deepstream \
    # && make -j$(nproc) \
    # && pip3 install ./pyds-*.whl

# pylon and gst pylon plugin
RUN apt update && apt install -y swig
# RUN wget https://vibratorvials.blob.core.windows.net/data/pylon_7.2.1.25747-deb0_arm64.deb && \
#     dpkg -i pylon_7.2.1.25747-deb0_arm64.deb
RUN wget https://www.baslerweb.com/fp-1668420816/media/downloads/software/pylon_software/pylon_7.2.1.25747_aarch64_debs.tar.gz \
    && tar -xf pylon_7.2.1.25747_aarch64_debs.tar.gz \
    && apt install ./pylon_7.2.1.25747-deb0_arm64.deb
RUN git clone https://github.com/basler/pypylon.git && \
    cd pypylon && \
    pip3 install . && \
    cd .. && rm -rf pypylon pylon_7.2.1.25747-deb0_arm64.deb

# cmake
RUN apt remove meson ninja-build
RUN python3 -m pip install meson ninja --upgrade
RUN apt update && \
    apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
# RUN wget https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3.tar.gz && \
#     tar -zxvf cmake-3.17.3.tar.gz && \
#     cd cmake-3.17.3/ && \
#     ./bootstrap && \
#     make && make install && \
#     cd .. && rm -rf cmake-3.17.3 cmake-3.17.3.tar.gz
RUN pip3 install cmake

ENV PYLON_ROOT="${PYLON_ROOT}:/opt/pylon"
RUN echo "${PYLON_ROOT}"
RUN git clone https://github.com/basler/gst-plugin-pylon.git && \
    cd gst-plugin-pylon && \
    meson setup builddir --prefix /usr/ && \
    ninja -C builddir && \
    ninja -C builddir install

# COPY . /app
WORKDIR /app
# RUN CUDA_VER=11.4 make -C nvdsinfer_custom_impl_Yolo

# usb signal tower
RUN apt-get install libusb-1.0.0
RUN pip3 install pyusb

# CMD ["cd DeepStream-Yolo", "&&", "CUDA_VER=11.4 make -C nvdsinfer_custom_impl_Yolo", "&&", "python3", "deepstream_test_1_usb.py"]
CMD ["sh","-c","cd DeepStream-Yolo && CUDA_VER=11.4 make -C nvdsinfer_custom_impl_Yolo && python3 deepstream_test_1_usb.py"]